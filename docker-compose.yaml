version: '3.8'

services:
  mock-producer:
    build:
      context: dist/apps/device-mock-producer
    environment:
      - SLEEP_TIME=10
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9011:9011"
    volumes:
      - "./tmp/kafka:/bitnami"
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9011,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.0.57:9011
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  device-db:
    ports:
      - '27017:27017'
    container_name: device-db
    image: mongo
    restart: always
    volumes:
      - ./tmp/db_device:/data/db


  data-db:
    image: postgres:14.1-alpine
    restart: always
    container_name: data-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./tmp/db_data:/var/lib/postgresql/data


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9011
